{"version":3,"file":"snippet.min.js","sources":["oo/oo/build/output/support.js","oo/oo/build/output/snippet.js","oo/oo/build/output/aiSupport.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar strEmpty = \"\";\r\n// Gets the time as an ISO date format, using a function as IE7/8 doesn't support toISOString\r\nexport function _getTime() {\r\n    var date = new Date();\r\n    function pad(num) {\r\n        var r = strEmpty + num;\r\n        if (r.length === 1) {\r\n            r = \"0\" + r;\r\n        }\r\n        return r;\r\n    }\r\n    return date.getUTCFullYear()\r\n        + \"-\" + pad(date.getUTCMonth() + 1)\r\n        + \"-\" + pad(date.getUTCDate())\r\n        + \"T\" + pad(date.getUTCHours())\r\n        + \":\" + pad(date.getUTCMinutes())\r\n        + \":\" + pad(date.getUTCSeconds())\r\n        + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n        + \"Z\";\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { _createAiEnvelope, aiMethod } from \"./aiSupport\";\r\nimport { _createOneDsEnvelope, oneDsMethods } from \"./1dsSupport\";\r\n(function (win, doc) {\r\n    var isOneDS = false; // place holder, will be removed during runtime\r\n    var UInt32Mask = 0x100000000;\r\n    var locn = win.location;\r\n    var helpLink = \"https://go.microsoft.com/fwlink/?linkid=2128109\";\r\n    var scriptText = \"script\";\r\n    var strInstrumentationKey = \"instrumentationKey\";\r\n    var strIngestionendpoint = \"ingestionendpoint\";\r\n    var strDisableExceptionTracking = \"disableExceptionTracking\";\r\n    var strToLowerCase = \"toLowerCase\";\r\n    var strConStringIKey = strInstrumentationKey[strToLowerCase]();\r\n    var strEmpty = \"\";\r\n    var strUndefined = \"undefined\";\r\n    var strCrossOrigin = \"crossOrigin\";\r\n    var strJsonResponseError = \"Error Loading JSON response\";\r\n    var strPostMethod = \"POST\";\r\n    var strGetMethod = \"GET\";\r\n    var policyName = cfg.pn || \"aiPolicy\";\r\n    var _sequence = 0;\r\n    var _epoch = 0;\r\n    var sdkInstanceName;\r\n    var aiName;\r\n    if (isOneDS) {\r\n        sdkInstanceName = \"onedsSDK\";\r\n        aiName = cfg.name || \"oneDSWeb\"; // provide non default instance name through snipConfig name value\r\n    }\r\n    else {\r\n        sdkInstanceName = \"appInsightsSDK\";\r\n        aiName = cfg.name || \"appInsights\";\r\n    }\r\n    if (cfg.name || win[sdkInstanceName]) {\r\n        // Only set if supplied or another name is defined to avoid polluting the global namespace\r\n        win[sdkInstanceName] = aiName;\r\n    }\r\n    var aiSdk = win[aiName] || (function (aiConfig, aiExtensions) {\r\n        var targetSrc = aiConfig[\"url\"] || cfg.src;\r\n        var loadFailed = false;\r\n        var handled = false;\r\n        var appInsights = {\r\n            initialize: true,\r\n            queue: [],\r\n            sv: \"9\",\r\n            config: aiConfig,\r\n            version: 2.0,\r\n            extensions: aiExtensions\r\n        };\r\n        if (isOneDS && !aiConfig[\"webAnalyticsConfiguration\"]) {\r\n            aiConfig[\"webAnalyticsConfiguration\"] = {};\r\n        }\r\n        function isIE() {\r\n            var nav = navigator;\r\n            if (nav) {\r\n                var userAgent = (nav.userAgent || \"\").toLowerCase();\r\n                return (userAgent.indexOf(\"msie\") !== -1 || userAgent.indexOf(\"trident/\") !== -1);\r\n            }\r\n            return false;\r\n        }\r\n        function _parseConnectionString() {\r\n            var fields = {};\r\n            var connectionString = aiConfig.connectionString;\r\n            if (typeof connectionString === \"string\" && connectionString) {\r\n                var kvPairs = connectionString.split(\";\");\r\n                for (var lp = 0; lp < kvPairs.length; lp++) {\r\n                    var kvParts = kvPairs[lp].split(\"=\");\r\n                    if (kvParts.length === 2) { // only save fields with valid formats\r\n                        fields[kvParts[0][strToLowerCase]()] = kvParts[1];\r\n                    }\r\n                }\r\n            }\r\n            // apply the default endpoints\r\n            if (!fields[strIngestionendpoint]) {\r\n                // use endpoint suffix where overrides are not provided\r\n                var endpointSuffix = fields.endpointsuffix;\r\n                // Only fetch the location if a suffix was supplied\r\n                var fLocation = endpointSuffix ? fields.location : null;\r\n                fields[strIngestionendpoint] = \"https://\" + (fLocation ? fLocation + \".\" : strEmpty) + \"dc.\" + (endpointSuffix || \"services.visualstudio.com\");\r\n            }\r\n            return fields;\r\n        }\r\n        function _sendEvents(evts, endpointUrl) {\r\n            if (JSON) {\r\n                var sender = win.fetch;\r\n                if (sender && !cfg.useXhr) {\r\n                    sender(endpointUrl, { method: strPostMethod, body: JSON.stringify(evts), mode: \"cors\" });\r\n                }\r\n                else if (XMLHttpRequest) {\r\n                    // IE doesn't support fetch and private clouds may only be using IE\r\n                    var xhr = new XMLHttpRequest();\r\n                    xhr.open(strPostMethod, endpointUrl);\r\n                    xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n                    xhr.send(JSON.stringify(evts));\r\n                }\r\n            }\r\n        }\r\n        function _reportFailure(targetSrc) {\r\n            if (cfg.dle === true) {\r\n                return;\r\n            }\r\n            var iKey;\r\n            var endpointUrl;\r\n            if (isOneDS) {\r\n                endpointUrl = aiConfig.endpointUrl || \"https://browser.events.data.microsoft.com/OneCollector/1.0/\";\r\n                iKey = aiConfig[\"instrumentationKey\"] || \"\";\r\n                var channelConfig = aiConfig[\"channelConfiguration\"];\r\n                if (channelConfig) {\r\n                    endpointUrl = channelConfig.overrideEndpointUrl || endpointUrl;\r\n                    iKey = channelConfig[\"overrideInstrumentationKey\"] || iKey;\r\n                }\r\n                var dt = Date;\r\n                var now = void 0;\r\n                if (dt.now) {\r\n                    now = dt.now();\r\n                }\r\n                else {\r\n                    now = new dt().getTime();\r\n                }\r\n                endpointUrl = endpointUrl + \"?cors=true&content-type=application/x-json-stream&client-id=NO_AUTH&client-version=\" + appInsights.sv + \"&apikey=\" + iKey + \"&w=0&upload-time=\" + now.toString();\r\n            }\r\n            else {\r\n                var conString = _parseConnectionString();\r\n                iKey = conString[strConStringIKey] || aiConfig[strInstrumentationKey] || strEmpty;\r\n                var ingest = conString[strIngestionendpoint];\r\n                if (ingest && ingest.slice(-1) === \"/\") {\r\n                    ingest = ingest.slice(0, -1);\r\n                }\r\n                endpointUrl = ingest ? ingest + \"/v2/track\" : aiConfig.endpointUrl; // only add /v2/track when from connectionstring\r\n                endpointUrl = aiConfig.userOverrideEndpointUrl ? aiConfig.userOverrideEndpointUrl : endpointUrl;\r\n            }\r\n            var message = \"SDK LOAD Failure: Failed to load Application Insights SDK script (See stack for details)\";\r\n            var evts = [];\r\n            evts.push(_createException(iKey, message, targetSrc, endpointUrl));\r\n            if (!isOneDS) {\r\n                evts.push(_createInternal(iKey, message, targetSrc, endpointUrl));\r\n            }\r\n            _sendEvents(evts, endpointUrl);\r\n        }\r\n        function _createEnvelope(iKey, theType) {\r\n            if (_epoch === 0) {\r\n                _epoch = Math.floor((UInt32Mask * Math.random()) | 0) >>> 0;\r\n            }\r\n            if (isOneDS) {\r\n                return _createOneDsEnvelope(iKey, theType, _epoch, _sequence, appInsights.sv);\r\n            }\r\n            else {\r\n                return _createAiEnvelope(iKey, theType, appInsights.sv, appInsights.version, locn);\r\n            }\r\n        }\r\n        function _createInternal(iKey, message, targetSrc, endpointUrl) {\r\n            var envelope = _createEnvelope(iKey, \"Message\");\r\n            var data = envelope.data;\r\n            data.baseType = \"MessageData\";\r\n            var baseData = data.baseData;\r\n            baseData.message = \"AI (Internal): 99 message:\\\"\" + (message + \" (\" + targetSrc + \")\").replace(/\\\"/g, strEmpty) + \"\\\"\";\r\n            baseData.properties = {\r\n                endpoint: endpointUrl\r\n            };\r\n            return envelope;\r\n        }\r\n        function _createException(iKey, message, targetSrc, endpointUrl) {\r\n            var envelope;\r\n            if (isOneDS) {\r\n                envelope = _createEnvelope(iKey, \"Ms.Web.ClientError\");\r\n            }\r\n            else {\r\n                envelope = _createEnvelope(iKey, \"Exception\");\r\n            }\r\n            var data = envelope.data;\r\n            data.baseType = \"ExceptionData\";\r\n            data.baseData.exceptions = [{\r\n                    typeName: \"SDKLoadFailed\",\r\n                    message: message.replace(/\\./g, \"-\"),\r\n                    hasFullStack: false,\r\n                    stack: message + \"\\nSnippet failed to load [\" + targetSrc + \"] -- Telemetry is disabled\\nHelp Link: \" + helpLink + \"\\nHost: \" + (locn && locn.pathname || \"_unknown_\") + \"\\nEndpoint: \" + endpointUrl,\r\n                    parsedStack: []\r\n                }];\r\n            return envelope;\r\n        }\r\n        var domainRetryIndex = -1;\r\n        var domainRetryCount = 0;\r\n        var domains = [\r\n            \"js.monitor.azure.com\",\r\n            \"js.cdn.applicationinsights.io\",\r\n            \"js.cdn.monitor.azure.com\",\r\n            \"js0.cdn.applicationinsights.io\",\r\n            \"js0.cdn.monitor.azure.com\",\r\n            \"js2.cdn.applicationinsights.io\",\r\n            \"js2.cdn.monitor.azure.com\",\r\n            \"az416426.vo.msecnd.net\" // this domain is supported but not recommended\r\n        ];\r\n        var fallback = function () { return setScript(targetSrc, null); };\r\n        if (cfg.sri) {\r\n            var match_1 = targetSrc.match(/^((http[s]?:\\/\\/.*\\/)\\w+(\\.\\d+){1,5})\\.(([\\w]+\\.){0,2}js)$/);\r\n            if (match_1 && match_1.length === 6) {\r\n                var integrityUrl = \"\".concat(match_1[1], \".integrity.json\");\r\n                var targetType_1 = \"@\".concat(match_1[4]);\r\n                var sender = window.fetch;\r\n                var handleResponse_1 = function (json) {\r\n                    if (!json.ext || !json.ext[targetType_1] || !json.ext[targetType_1].file) {\r\n                        throw new Error(strJsonResponseError);\r\n                    }\r\n                    var integrity = json.ext[targetType_1].integrity || null;\r\n                    targetSrc = match_1[2] + json.ext[targetType_1].file;\r\n                    setScript(targetSrc, integrity);\r\n                };\r\n                if (sender && !cfg.useXhr) {\r\n                    sender(integrityUrl, { method: strGetMethod, mode: \"cors\" })\r\n                        .then(function (response) { return response.json().catch(function () { return ({}); }); })\r\n                        .then(handleResponse_1)\r\n                        .catch(fallback);\r\n                }\r\n                else if (XMLHttpRequest) {\r\n                    var xhr_1 = new XMLHttpRequest();\r\n                    xhr_1.open(strGetMethod, integrityUrl);\r\n                    xhr_1.onreadystatechange = function () {\r\n                        if (xhr_1.readyState === XMLHttpRequest.DONE) {\r\n                            if (xhr_1.status === 200) {\r\n                                try {\r\n                                    handleResponse_1(JSON.parse(xhr_1.responseText));\r\n                                }\r\n                                catch (_a) {\r\n                                    fallback();\r\n                                }\r\n                            }\r\n                            else {\r\n                                fallback();\r\n                            }\r\n                        }\r\n                    };\r\n                    xhr_1.send();\r\n                }\r\n            }\r\n            else if (targetSrc) {\r\n                fallback(); // Fallback to original behavior\r\n            }\r\n        }\r\n        else if (targetSrc) {\r\n            fallback(); // Fallback to original behavior\r\n        }\r\n        function setScript(targetSrc, integrity) {\r\n            if (isIE() && targetSrc.indexOf(\"ai.3\") !== -1) {\r\n                // This regex matches any URL which contains \"\\ai.3.\" but not any full versions like \"\\ai.3.1\" etc\r\n                targetSrc = targetSrc.replace(/(\\/)(ai\\.3\\.)([^\\d]*)$/, function (_all, g1, g2) {\r\n                    return g1 + \"ai.2\" + g2;\r\n                });\r\n                // let message = \"Load Version 2 SDK instead to support IE\"; // where to report this error?\r\n            }\r\n            if (cfg.cr !== false) {\r\n                for (var i = 0; i < domains.length; i++) {\r\n                    if (targetSrc.indexOf(domains[i]) > 0) {\r\n                        domainRetryIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            var _handleError = function (evt) {\r\n                appInsights.queue = []; // Clear the queue\r\n                if (!handled) {\r\n                    // start retry\r\n                    if (domainRetryIndex >= 0 && domainRetryCount + 1 < domains.length) { // domainRetryIndex will be negative when client using own domain (the supported domain list is defined above)\r\n                        var nextIdx_1 = (domainRetryIndex + domainRetryCount + 1) % domains.length;\r\n                        _createScript(targetSrc.replace(/^(.*\\/\\/)([\\w\\.]*)(\\/.*)$/, function (_all, http, domain, qs) {\r\n                            return http + domains[nextIdx_1] + qs;\r\n                        }));\r\n                        domainRetryCount += 1;\r\n                    }\r\n                    else {\r\n                        handled = true;\r\n                        loadFailed = true;\r\n                        _reportFailure(targetSrc);\r\n                    }\r\n                }\r\n            };\r\n            var _handleLoad = function (evt, isAbort) {\r\n                if (!handled) {\r\n                    // IE10, Opera calls loaded before the script is processed.\r\n                    // so delaying to give the script a chance to be processed\r\n                    setTimeout(function () {\r\n                        if (isAbort) {\r\n                            if (isOneDS) {\r\n                                if (typeof appInsights.isInitialized !== \"function\" || !appInsights.isInitialized()) {\r\n                                    _handleError();\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (!appInsights.core) {\r\n                                    _handleError();\r\n                                }\r\n                            }\r\n                        }\r\n                    }, 500);\r\n                }\r\n                loadFailed = false;\r\n            };\r\n            function create_policy() {\r\n                var _a;\r\n                // Function to handle URL validation\r\n                function validateURL(urlString) {\r\n                    try {\r\n                        var url = new URL(urlString);\r\n                        if (url.host && url.host === \"js.monitor.azure.com\") {\r\n                            return urlString;\r\n                        }\r\n                        else {\r\n                            handleInvalidURL(urlString);\r\n                        }\r\n                    }\r\n                    catch (_a) {\r\n                        handleInvalidURL(urlString);\r\n                    }\r\n                }\r\n                // Function to handle reporting failures\r\n                function handleInvalidURL(urlString) {\r\n                    _reportFailure(\"AI policy blocked URL: \" + urlString);\r\n                }\r\n                return (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy(policyName, {\r\n                    createScriptURL: validateURL\r\n                });\r\n            }\r\n            var _createScript = function (src) {\r\n                var scriptElement = doc.createElement(scriptText);\r\n                if (cfg.pl) {\r\n                    if (cfg.ttp && cfg.ttp.createScript) {\r\n                        scriptElement[\"src\"] = cfg.ttp.createScriptURL(src);\r\n                    }\r\n                    else {\r\n                        scriptElement[\"src\"] = create_policy().createScriptURL(src);\r\n                    }\r\n                }\r\n                else {\r\n                    scriptElement[\"src\"] = src;\r\n                }\r\n                if (cfg.nt) {\r\n                    scriptElement.setAttribute(\"nonce\", cfg.nt);\r\n                }\r\n                if (integrity) {\r\n                    // Set the integrity attribute to the script tag if integrity is provided\r\n                    scriptElement.integrity = integrity;\r\n                }\r\n                scriptElement.setAttribute(\"data-ai-name\", aiName);\r\n                // Allocate Cross origin only if defined and available\r\n                var crossOrigin = cfg[strCrossOrigin];\r\n                if ((crossOrigin || crossOrigin === \"\") && scriptElement[strCrossOrigin] != strUndefined) {\r\n                    scriptElement[strCrossOrigin] = crossOrigin;\r\n                }\r\n                scriptElement.onload = _handleLoad;\r\n                scriptElement.onerror = _handleError;\r\n                // Some browsers support onload while others onreadystatechange and others both\r\n                scriptElement[\"onreadystatechange\"] = function (evt, isAbort) {\r\n                    if (scriptElement[\"readyState\"] === \"loaded\" || scriptElement[\"readyState\"] === \"complete\") {\r\n                        _handleLoad(evt, isAbort);\r\n                    }\r\n                };\r\n                if (cfg.ld && cfg.ld < 0) {\r\n                    // if user wants to append tag to document head, blocking page load\r\n                    var headNode = doc.getElementsByTagName(\"head\")[0];\r\n                    headNode.appendChild(scriptElement);\r\n                }\r\n                else {\r\n                    setTimeout(function () {\r\n                        // Attempts to place the script tag in the same location as the first script on the page\r\n                        doc.getElementsByTagName(scriptText)[0].parentNode.appendChild(scriptElement);\r\n                    }, cfg.ld || 0);\r\n                }\r\n                return scriptElement;\r\n            };\r\n            _createScript(targetSrc);\r\n        }\r\n        // capture initial cookie\r\n        try {\r\n            appInsights.cookie = doc.cookie;\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty\r\n        }\r\n        function _createMethods(methods) {\r\n            while (methods.length) {\r\n                (function (name) {\r\n                    // Define a temporary method that queues-up a the real method call\r\n                    appInsights[name] = function () {\r\n                        // Capture the original arguments passed to the method\r\n                        var originalArguments = arguments;\r\n                        if (!loadFailed) { // If we have detected that the main script failed to load then stop queuing events that will never be processed\r\n                            // Queue-up a call to the real method\r\n                            appInsights.queue.push(function () {\r\n                                // Invoke the real method with the captured original arguments\r\n                                appInsights[name].apply(appInsights, originalArguments);\r\n                            });\r\n                        }\r\n                    };\r\n                })(methods.pop());\r\n            }\r\n        }\r\n        if (isOneDS) {\r\n            _createMethods(oneDsMethods);\r\n        }\r\n        else {\r\n            _createMethods(aiMethod);\r\n        }\r\n        // expose SeverityLevel enum\r\n        appInsights[\"SeverityLevel\"] = {\r\n            Verbose: 0,\r\n            Information: 1,\r\n            Warning: 2,\r\n            Error: 3,\r\n            Critical: 4\r\n        };\r\n        // Collect global errors\r\n        var globalErrorCollect = false;\r\n        if (isOneDS) {\r\n            var autoCapture = aiConfig[\"webAnalyticsConfiguration\"][\"autoCapture\"];\r\n            if (!autoCapture || autoCapture.jsError) {\r\n                globalErrorCollect = true;\r\n            }\r\n        }\r\n        else {\r\n            // Note: ApplicationInsightsAnalytics is the extension string identifier for\r\n            //  AppAnalytics. It is defined in ApplicationInsights.ts:ApplicationInsights.identifer\r\n            var analyticsCfg = ((aiConfig.extensionConfig || {}).ApplicationInsightsAnalytics || {});\r\n            if (!(aiConfig[strDisableExceptionTracking] === true || analyticsCfg[strDisableExceptionTracking] === true)) {\r\n                globalErrorCollect = true;\r\n            }\r\n        }\r\n        if (globalErrorCollect) {\r\n            var method_1 = \"onerror\";\r\n            _createMethods([\"_\" + method_1]);\r\n            var originalOnError_1 = win[method_1];\r\n            win[method_1] = function (message, url, lineNumber, columnNumber, error) {\r\n                var handled = originalOnError_1 && originalOnError_1(message, url, lineNumber, columnNumber, error);\r\n                if (handled !== true) {\r\n                    appInsights[\"_\" + method_1]({\r\n                        message: message,\r\n                        url: url,\r\n                        lineNumber: lineNumber,\r\n                        columnNumber: columnNumber,\r\n                        error: error,\r\n                        evt: win.event\r\n                    });\r\n                }\r\n                return handled;\r\n            };\r\n            aiConfig[\"autoExceptionInstrumented\"] = true;\r\n        }\r\n        return appInsights;\r\n    })(cfg.cfg);\r\n    // global instance must be set in this order to mitigate issues in ie8 and lower\r\n    win[aiName] = aiSdk;\r\n    function _onInit() {\r\n        if (cfg.onInit) {\r\n            cfg.onInit(aiSdk);\r\n        }\r\n    }\r\n    // if somebody calls the snippet twice, don't report page view again\r\n    if (aiSdk.queue && aiSdk.queue.length === 0) {\r\n        aiSdk.queue.push(_onInit);\r\n        if (!isOneDS) {\r\n            aiSdk.trackPageView({});\r\n        }\r\n    }\r\n    else {\r\n        // Already loaded so just call the onInit\r\n        _onInit();\r\n    }\r\n})(window, document);\r\n","import { _getTime } from \"./support\";\r\nvar strEmpty = \"\";\r\nexport function _createAiEnvelope(iKey, theType, sv, version, locn) {\r\n    var tags = {};\r\n    var type = \"Browser\";\r\n    var strAiDevice = \"ai.device.\";\r\n    var strAiOperationName = \"ai.operation.name\";\r\n    var strAiSdkVersion = \"ai.internal.sdkVersion\";\r\n    var strToLowerCase = \"toLowerCase\";\r\n    tags[strAiDevice + \"id\"] = type[strToLowerCase]();\r\n    tags[strAiDevice + \"type\"] = type;\r\n    tags[strAiOperationName] = locn && locn.pathname || \"_unknown_\";\r\n    tags[strAiSdkVersion] = \"javascript:snippet_\" + (sv || version);\r\n    var envelope = {\r\n        time: _getTime(),\r\n        iKey: iKey,\r\n        name: \"Microsoft.ApplicationInsights.\" + iKey.replace(/-/g, strEmpty) + \".\" + theType,\r\n        sampleRate: 100,\r\n        tags: tags,\r\n        data: {\r\n            baseData: {\r\n                ver: 2\r\n            }\r\n        },\r\n        ver: undefined,\r\n        seq: \"1\",\r\n        aiDataContract: undefined\r\n    };\r\n    return envelope;\r\n}\r\nvar track = \"track\";\r\nvar trackPage = \"TrackPage\";\r\nvar trackEvent = \"TrackEvent\";\r\nexport var aiMethod = [\r\n    track + \"Event\",\r\n    track + \"Exception\",\r\n    track + \"PageView\",\r\n    track + \"PageViewPerformance\",\r\n    \"addTelemetryInitializer\",\r\n    track + \"Trace\",\r\n    track + \"DependencyData\",\r\n    track + \"Metric\",\r\n    \"start\" + trackPage,\r\n    \"stop\" + trackPage,\r\n    \"start\" + trackEvent,\r\n    \"stop\" + trackEvent,\r\n    \"setAuthenticatedUserContext\",\r\n    \"clearAuthenticatedUserContext\",\r\n    \"flush\"\r\n];\r\n"],"names":["win","doc","locn","scriptText","strIngestionendpoint","strDisableExceptionTracking","strCrossOrigin","strPostMethod","policyName","aiName","aiSdk","track","trackPage","trackEvent","aiMethod","_onInit","cfg","onInit","window","document","location","pn","sdkInstanceName","name","aiConfig","targetSrc","src","loadFailed","handled","appInsights","initialize","queue","sv","config","version","extensions","_reportFailure","endpointUrl","evts","envelope","baseData","sender","xhr","dle","iKey","conString","fLocation","fields","connectionString","kvPairs","split","lp","length","kvParts","endpointSuffix","endpointsuffix","_parseConnectionString","ingest","slice","userOverrideEndpointUrl","push","message","data","_createEnvelope","baseType","exceptions","typeName","replace","hasFullStack","stack","pathname","parsedStack","properties","endpoint","JSON","fetch","useXhr","method","body","stringify","mode","XMLHttpRequest","open","setRequestHeader","send","theType","tags","type","strAiDevice","time","date","Date","getUTCFullYear","pad","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","sampleRate","ver","undefined","seq","aiDataContract","num","r","match_1","targetType_1","handleResponse_1","xhr_1","domainRetryIndex","domainRetryCount","domains","fallback","setScript","integrity","nav","navigator","userAgent","toLowerCase","indexOf","_all","g1","g2","cr","i","_handleError","evt","nextIdx_1","_createScript","http","domain","qs","_handleLoad","isAbort","setTimeout","core","_a","scriptElement","createElement","crossOrigin","pl","ttp","createScript","createScriptURL","trustedTypes","createPolicy","urlString","url","URL","host","handleInvalidURL","nt","setAttribute","onload","onerror","ld","getElementsByTagName","appendChild","parentNode","sri","match","integrityUrl","concat","json","ext","file","Error","then","response","catch","onreadystatechange","readyState","DONE","status","parse","responseText","cookie","e","_createMethods","methods","originalArguments","arguments","apply","pop","method_1","originalOnError_1","globalErrorCollect","Verbose","Information","Warning","Critical","analyticsCfg","extensionConfig","ApplicationInsightsAnalytics","lineNumber","columnNumber","error","event","trackPageView"],"mappings":"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"}