import ts from "typescript";
export default class LanguageServiceHostProxy implements ts.LanguageServiceHost {
    private readonly emptyLanguageServiceHost;
    private languageServiceHost;
    private scriptSnapshots;
    constructor();
    setHost(languageServiceHostImpl: ts.LanguageServiceHost | null): void;
    static isSharedTypesFile(filePath: string): boolean;
    getCompilationSettings(): ts.CompilerOptions;
    getScriptFileNames(): string[];
    getScriptVersion(fileName: string): string;
    getScriptSnapshot(fileName: string): ts.IScriptSnapshot | undefined;
    fileExists(filePath: string): boolean;
    readFile(filePath: string): string | undefined;
    getDefaultLibFileName(options: ts.CompilerOptions): string;
    getCurrentDirectory(): string;
}
export declare class EmptyLanguageServiceHost implements ts.LanguageServiceHost {
    getCompilationSettings(): {};
    getScriptFileNames(): never[];
    getScriptVersion(): string;
    getScriptSnapshot(): undefined;
    fileExists(): boolean;
    readFile(): undefined;
    getCurrentDirectory(): string;
    getDefaultLibFileName(options: ts.CompilerOptions): string;
}
