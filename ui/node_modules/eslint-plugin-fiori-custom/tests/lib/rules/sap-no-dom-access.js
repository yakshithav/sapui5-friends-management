/**
 * @fileoverview Detect some warning for usages of (window.)document APIs
 * @author Achref Kilani Jrad
 * @ESLint Version 0.14.0 / February 2015
 */

// ------------------------------------------------------------------------------
// Invoking global form of strict mode syntax for whole script
// ------------------------------------------------------------------------------
"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

var rule = require("../../../lib/rules/sap-no-dom-access.js"),

    RuleTester = require("eslint").RuleTester;


//------------------------------------------------------------------------------
// Tests
//------------------------------------------------------------------------------

var ruleTester = new RuleTester();
var errorMessage = "Direct DOM access, use jQuery selector instead";
ruleTester.run("sap-no-dom-access", rule,              
                {
                    valid: [
                            "myObj.body.createObj();",
                            "var myBody = myObj.body;",
                            "documentSome.getElementById('test');",
                            "var intrestingAddress = window.location;",
                            "var intrestingAddress = location;",
                            "var intrestingAddress = window.location.href;",
                            "var intrestingAddress = location.href;",
                            "var loc = window.location; intrestingAddress = loc.href;",
                            "var test = test.body;",
                            "window.location.href;",
                            "me.extend([window.location.href]);",
                            "oViewModel = new JSONModel({ shareSendEmailMessage: this.getResourceBundle().getText('shareSendEmailWorklistMessage', [window.location.href])});",
                            "if(true) history.go(-1);",
                            "if(true){}else{history.go(-1);}",
                            "if(true){history.back();}",
                            "(true?history.go(-1):'');",
                            "(true?history.fly(-1):'');",// increase code coverage
                            "sap.pas.href = x;", // increase code coverage
                            // Beispiel
                            "if (sPreviousHash !== undefined || !oCrossAppNavigator) {history.go(-1);}",
                            // false negatives
                            "var m = window.history.go; m(-2);",
                            "function myHiddenGo(go, delta){go(delta);} myHiddenGo(history.go, -5);"
                    ],
                    invalid: [
                            {
                                code: "document.getElementById;",
                                errors: [
                                    {
                                        message: errorMessage,
                                        type: "MemberExpression"
                                    }
                                ]
                            },
                            {
                                code: "document.getElementById('test');",
                                errors: [
                                    {
                                        message: errorMessage,
                                        type: "MemberExpression"
                                    }
                                ]
                            },
                            {
                                code: "window.document.getElementById('test');",
                                errors: [
                                    {
                                        message: errorMessage,
                                        type: "MemberExpression"
                                    }
                                ]
                            },
                            {
                                code: "var w = window; w.document.getElementById('test');",
                                errors: [
                                    {
                                        message: errorMessage,
                                        type: "MemberExpression"
                                    }
                                ]
                            },
                            {
                                code: "var d = document; d.getElementById('test');",
                                errors: [
                                    {
                                        message: errorMessage,
                                        type: "MemberExpression"
                                    }
                                ]
                            },
                            {
                                code: "document.getElementsByClassName('test');",
                                errors: [
                                    {
                                        message: errorMessage,
                                        type: "MemberExpression"
                                    }
                                ]
                            },
                            {
                                code: "document.getElementsByTagName('test');",
                                errors: [
                                    {
                                        message: errorMessage,
                                        type: "MemberExpression"
                                    }
                                ]
                            },
                            {
                                code: "document.getElementsByName('test');",
                                errors: [
                                    {
                                        message: errorMessage,
                                        type: "MemberExpression"
                                    }
                                ]
                            }
                    ]
                });
