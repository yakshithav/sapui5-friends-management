/**
 * @fileoverview Detects the usage of sap.ui.commons objects.
 * @author Christopher Fenner - D065687
 * @ESLint Version 0.8.0 / April 2016
 */

// ------------------------------------------------------------------------------
// Rule Disablement
// ------------------------------------------------------------------------------
/* eslint-disable strict */
// ------------------------------------------------------------------------------
// Rule Definition
// ------------------------------------------------------------------------------
module.exports = {
    create: function(context) {
        "use strict";
        var MSG = "Usage of sap.ui.commons controls is forbidden, please use controls from sap.m";

        // --------------------------------------------------------------------------
        // Basic Helpers
        // --------------------------------------------------------------------------
        function startsWith(base, sub) {
            if (base.indexOf) {
                return base.indexOf(sub) === 0;
            }
        }

        function isType(node, type) {
            return node && node.type === type;
        }

        function isIdentifier(node) {
            return isType(node, "Identifier");
        }

        function isLiteral(node) {
            return isType(node, "Literal");
        }

        function isMember(node) {
            return isType(node, "MemberExpression");
        }

        function isArray(node) {
            return isType(node, "ArrayExpression");
        }

        function getMemberAsString(node) {
            if (isMember(node)) {
                return getMemberAsString(node.object) + "." + getMemberAsString(node.property);
            } else if (isLiteral(node)) {
                return node.value;
            } else if (isIdentifier(node)) {
                return node.name;
            }
            return "";
        }

        function isInteresting(node) {
            var callee = node.callee;
            if (isMember(callee)) {
                if (getMemberAsString(callee) === "sap.ui.define") {
                    return true;
                }
            }
            return false;
        }

        function isValid(node) {
            if (node.arguments && isArray(node.arguments[0])) {
                var importList = node.arguments[0].elements;
                for ( var key in importList) {
                    if (importList.hasOwnProperty(key)) {
                        var lib = importList[key];
                        if (isLiteral(lib) && startsWith(lib.value, "sap/ui/commons")) {
                            return false;
                        }
                    }
                }
            }
            return true;
        }

        return {
            "NewExpression": function(node) {
                if (isMember(node.callee) && startsWith(getMemberAsString(node.callee), "sap.ui.commons")) {
                    context.report(node, MSG);
                }
            },
            "CallExpression": function(node) {
                if (isInteresting(node) && !isValid(node)) {
                    context.report(node, MSG);
                }
            }
        };
    }
};
