import type { UI5Theme } from './types';
export declare const enum ui5ThemeIds {
    SAP_BELIZE = "sap_belize",
    SAP_FIORI_3 = "sap_fiori_3",
    SAP_FIORI_3_DARK = "sap_fiori_3_dark",
    SAP_HORIZON = "sap_horizon",
    SAP_HORIZON_DARK = "sap_horizon_dark"
}
export declare const ui5Themes: Record<ui5ThemeIds, UI5Theme>;
/**
 * Get the default theme for the specified ui5 version string.
 *
 * @param ui5Version - optional, if not specified the latest supported theme will be returned
 * @returns UI5 theme identifier e.g. 'sap_fiori_3'
 */
export declare function getDefaultUI5Theme(ui5Version?: string): string;
/**
 * Returns the list of supported UI5 themes for a given UI5 version.
 *
 * - If ui5Version is `Latest`, the latest supported UI5 version is used.
 * - If ui5Version is a snapshot version (e.g., 'snapshot-1.137.0'), the snapshot prefix is removed.
 * - If ui5Version is invalid or cannot be parsed into a semantic version, all themes are returned.
 * - Themes that are deprecated for the given version are marked with "(deprecated)" in their label.
 *
 * @param [ui5Version] - The UI5 version to filter themes by. Defaults to `defaultVersion`.
 * @returns {Promise<UI5Theme[]>}  A promise that returns an array of UI5 themes supported for the specified version.
 */
export declare function getUi5Themes(ui5Version?: string): Promise<UI5Theme[]>;
//# sourceMappingURL=ui5-theme-info.d.ts.map