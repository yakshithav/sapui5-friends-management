import type { UI5VersionFilterOptions, UI5Version } from './types';
/**
 * Get the UI5 versions filtered by the specified options.
 *
 * @param filterOptions - filter the UI5 versions returned. See {@link UI5VersionFilterOptions} for more information.
 * @returns array of UI5 versions of type {@link UI5Version}.
 */
export declare function getUI5Versions(filterOptions?: UI5VersionFilterOptions): Promise<UI5Version[]>;
/**
 * Retrieves the latest supported published UI5 version.
 *
 * - If useCache is true, the function first attempts to retrieve the version from the cache:
 *    - If the cache contains official versions, the first version from the cache is returned.
 *    - If the cache is empty, the function makes an API call to fetch the latest UI5 versions & populates the cache back.
 * - If useCache is false, the function fetches the latest version from https://ui5.sap.com.
 * - If no versions are available (e.g., API call fails or cache is empty), the function returns the latest fallback version.
 *
 * @param {boolean} [useCache] - Whether to use cached versions.
 * @returns {Promise<string | undefined>} The latest supported UI5 version, or undefined if the API call fails.
 */
export declare function getLatestUI5Version(useCache?: boolean): Promise<string | undefined>;
//# sourceMappingURL=ui5-version-info.d.ts.map