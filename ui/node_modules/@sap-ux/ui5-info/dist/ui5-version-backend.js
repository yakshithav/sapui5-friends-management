"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSapSystemUI5Version = getSapSystemUI5Version;
const axios_1 = __importDefault(require("axios"));
const https_1 = __importDefault(require("https"));
/**
 * Query the UI5 version used by backend system.
 *
 * @param sapSystemHost - Host URL of sap system retrieves from service inquiry step
 * @param rejectUnauthorized - Set to true to reject querying hosts with self-signed https certificates. Default to false.
 * @returns - Semantic version of UI5 version. Possibly undefined.
 */
async function getSapSystemUI5Version(sapSystemHost, rejectUnauthorized = false) {
    if (!sapSystemHost) {
        return undefined;
    }
    const url = new URL('/sap/public/bc/ui5_ui5/bootstrap_info.json', sapSystemHost).toString();
    let version;
    try {
        const response = await axios_1.default.get(url, {
            httpsAgent: new https_1.default.Agent({
                rejectUnauthorized
            })
        });
        if (response.status === 200) {
            const versionInfo = response.data;
            version = versionInfo.Version;
        }
    }
    catch {
        // Best effort attempt to retrieve UI5 version number from backend system.
        // No need to handle the error and version is undefined if not possible to
        // query UI5 version.
    }
    return version;
}
//# sourceMappingURL=ui5-version-backend.js.map