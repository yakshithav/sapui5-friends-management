import readPkgUp from 'read-pkg-up';
import type { WorkspaceConfiguration } from 'vscode';
export type PackageInfo = {
    /** Path to the main entry point. Can be used by composeWith. */
    path: string;
    /** Path to the package.json */
    packageJsonPath: string;
    /** The parsed package info */
    packageInfo: readPkgUp.PackageJson;
};
/**
 * Find installed packages that contain the specified package name substring and keyword.
 *
 * @param {string} subName - the substring to be matched against package names e.g. 'fiori-gen-ext' will be matched using glob pattern '*fiori-gen-ext*'
 * @param options -
 *  @param options.keyword - keyword that will be matched against found package.json keywords property
 *  @param options.vscWorkspaceConfig - if provided alternative vscode configured install paths will be checked
 *  @param options.minVersion - the minimum version of the specified extension, lower versions will not be returned. Must be a valid SemVer string
 * @returns {*}  {Promise<PackageInfo[]>}
 */
export declare function findInstalledPackages(subName: string, options?: {
    keyword?: string;
    vscWorkspaceConfig?: WorkspaceConfiguration;
    minVersion?: string;
}): Promise<PackageInfo[]>;
//# sourceMappingURL=installedCheck.d.ts.map