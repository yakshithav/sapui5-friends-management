"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Separator = void 0;
const chalk_1 = __importDefault(require("chalk"));
const figures_1 = __importDefault(require("figures"));
/**
 * Separator object. This is a copy of `inquirer@8.2.6` Separator class. Since this is the only implementation needed
 * from `inquirer` we have implemented our own to avoid a heavy dependency.
 *
 * Used to space/separate choices group
 *
 * @class
 * @param {string} line   Separation line content (facultative)
 */
class Separator {
    type;
    line;
    /**
     * Create a Separator instance.
     *
     * @param line the separator line
     */
    constructor(line) {
        this.type = 'separator';
        this.line = chalk_1.default.dim(line || new Array(15).join(figures_1.default.line));
    }
    /**
     * Stringify separator.
     *
     * @returns {string} the separator display string
     */
    toString() {
        return this.line;
    }
    /**
     * Helper function returning false if object is a separator.
     *
     * @param  {object} obj object to test against
     * @param obj.type the object type
     * @returns {boolean} `false` if object is a separator
     */
    static exclude(obj) {
        return obj.type !== 'separator';
    }
}
exports.Separator = Separator;
//# sourceMappingURL=separator.js.map