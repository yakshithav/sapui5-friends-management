"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AtoService = void 0;
const adt_service_1 = require("./adt-service");
const fast_xml_parser_1 = require("fast-xml-parser");
/**
 * AtoService implements ADT requests for fetching ATO settings.
 */
class AtoService extends adt_service_1.AdtService {
    /**
     * @see AdtService.getAdtCatagory()
     */
    static adtCategory = {
        scheme: 'http://www.sap.com/adt/categories/ato',
        term: 'settings'
    };
    /**
     * @see AdtService.getAdtCatagory()
     * @returns AdtCategory
     */
    static getAdtCatagory() {
        return AtoService.adtCategory;
    }
    /**
     * Send ADT request to fetch ATO settings.
     *
     * @returns AtoSettings
     */
    async getAtoInfo() {
        const acceptHeaders = {
            headers: {
                Accept: 'application/*'
            }
        };
        const response = await this.get('', acceptHeaders);
        return this.parseAtoResponse(response.data);
    }
    /**
     * Parse an XML document for ATO (Adaptation Transport Organizer) settings.
     *
     * @param xml xml document containing ATO settings
     * @returns parsed ATO settings
     */
    parseAtoResponse(xml) {
        if (fast_xml_parser_1.XMLValidator.validate(xml) !== true) {
            this.log.warn(`Invalid XML: ${xml}`);
            return {};
        }
        const options = {
            attributeNamePrefix: '',
            ignoreAttributes: false,
            ignoreNameSpace: true,
            parseAttributeValue: true,
            removeNSPrefix: true
        };
        const parser = new fast_xml_parser_1.XMLParser(options);
        const parsed = parser.parse(xml, true);
        return parsed.settings ? parsed.settings : {};
    }
}
exports.AtoService = AtoService;
//# sourceMappingURL=ato-service.js.map