import type { GeneratorEntry } from './types';
import type { ODataServiceTechnicalDetails, ValidationMessage } from '../../types';
import { AdtService } from '../services';
/**
 * Extension of the Generator service to generate OData services
 */
export declare class ODataServiceGenerator extends AdtService {
    /**
     * package to be used for generated objects
     */
    protected packageName: string;
    protected contentType: string;
    /**
     * Configure the UI service generator.
     *
     * @param _config - The generator configuration.
     * @param packageName - package to be used for generated objects
     */
    configure(_config: GeneratorEntry, packageName: string): void;
    /**
     * Set the content type to be used for post requests of genertor.
     *
     * @param contentType - content type to be used for generated objects
     */
    setContentType(contentType: string): void;
    /**
     * Validates input for OData Service generation.
     *
     * @param input - JSON string
     * @returns messages
     */
    validate(input: string): Promise<ValidationMessage[]>;
    /**
     * Gets technical details of (to be generated) OData service.
     * - this is a workaround for the missing service definition name in the generator response
     * - actual name might be different e.g. because of name collisions at the time when the actual generation is called.
     *
     * @param input - JSON string
     * @returns technical name of service definition
     */
    getTechnicalDetails(input: string): Promise<ODataServiceTechnicalDetails>;
    /**
     * Generates OData Service.
     *
     * @param input - JSON string
     * @returns HTTP status code as number
     * @throws Error if the generation fails
     */
    generate(input: string): Promise<number>;
    /**
     * Parse an xml document for validation messages.
     *
     * @param xml response for "validation" request
     * @returns messages
     */
    private parseValidateResponse;
    /**
     * Parse an XML document to find the technical name of the service definition.
     *
     * @param xml response for "preview" request
     * @returns technical details of service definition
     */
    private parsePreviewResponse;
}
//# sourceMappingURL=odata-service-generator.d.ts.map