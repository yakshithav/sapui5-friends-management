'use strict';
sap.ui.define([
    'open/ux/preview/client/thirdparty/@sap-ux-private/control-property-editor-common',
    '../utils/version'
], function (___sap_ux_private_control_property_editor_common, ___utils_version) {
    'use strict';
    function __ui5_require_async(path) {
        return new Promise(function (resolve, reject) {
            sap.ui.require([path], function (module) {
                if (!(module && module.__esModule)) {
                    module = module === null || !(typeof module === 'object' && path.endsWith('/library')) ? { default: module } : module;
                    Object.defineProperty(module, '__esModule', { value: true });
                }
                resolve(module);
            }, function (err) {
                reject(err);
            });
        });
    }
    const reloadApplication = ___sap_ux_private_control_property_editor_common['reloadApplication'];
    const storageFileChanged = ___sap_ux_private_control_property_editor_common['storageFileChanged'];
    const getUi5Version = ___utils_version['getUi5Version'];
    const isLowerThanMinimalUi5Version = ___utils_version['isLowerThanMinimalUi5Version'];
    class WorkspaceConnectorService {
        isReloadPending = false;
        async init(sendAction, subscribe) {
            this.sendAction = sendAction;
            subscribe(action => {
                if (reloadApplication.match(action)) {
                    this.isReloadPending = true;
                }
            });
            if (isLowerThanMinimalUi5Version(await getUi5Version(), {
                    major: 1,
                    minor: 73
                })) {
                const FakeLrepConnector = (await __ui5_require_async('sap/ui/fl/FakeLrepConnector')).default;
                FakeLrepConnector.fileChangeRequestNotifier = this.onChangeSaved.bind(this);
            } else {
                const connector = (await __ui5_require_async('open/ux/preview/client/flp/WorkspaceConnector')).default;
                connector.storage.fileChangeRequestNotifier = this.onChangeSaved.bind(this);
            }
        }
        onChangeSaved(fileName, kind) {
            let change = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
            let additionalChangeInfo = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
            const {changeType, content} = change;
            if (changeType && ![
                    'appdescr_fe_changePageConfiguration',
                    'appdescr_ui_generic_app_changePageConfiguration'
                ].includes(changeType) || kind === 'delete' || this.isReloadPending) {
                this.sendAction(storageFileChanged(fileName?.replace('sap.ui.fl.', '')));
            }
            if (changeType === 'addXML' && additionalChangeInfo?.templateName && content?.fragmentPath) {
                this.sendAction(storageFileChanged(content.fragmentPath));
            }
        }
    }
    var __exports = { __esModule: true };
    __exports.WorkspaceConnectorService = WorkspaceConnectorService;
    return __exports;
});