"use strict";

sap.ui.define(["sap/ui/dt/OverlayRegistry", "../../dialog-factory", "../control-types", "../table-quick-action-base", "../fe-v2/create-table-custom-column", "../dialog-enablement-validator"], function (OverlayRegistry, ____dialog_factory, ___control_types, ___table_quick_action_base, ___fe_v2_create_table_custom_column, ___dialog_enablement_validator) {
  "use strict";

  const DialogFactory = ____dialog_factory["DialogFactory"];
  const DialogNames = ____dialog_factory["DialogNames"];
  const SMART_TABLE_TYPE = ___control_types["SMART_TABLE_TYPE"];
  const GRID_TABLE_TYPE = ___control_types["GRID_TABLE_TYPE"];
  const MDC_TABLE_TYPE = ___control_types["MDC_TABLE_TYPE"];
  const TREE_TABLE_TYPE = ___control_types["TREE_TABLE_TYPE"];
  const TableQuickActionDefinitionBase = ___table_quick_action_base["TableQuickActionDefinitionBase"];
  const preprocessActionExecution = ___fe_v2_create_table_custom_column["preprocessActionExecution"];
  const DIALOG_ENABLEMENT_VALIDATOR = ___dialog_enablement_validator["DIALOG_ENABLEMENT_VALIDATOR"];
  const CREATE_TABLE_CUSTOM_COLUMN = 'create-table-custom-column';
  const CONTROL_TYPES = [SMART_TABLE_TYPE, MDC_TABLE_TYPE, TREE_TABLE_TYPE, GRID_TABLE_TYPE];
  class AddTableCustomColumnQuickAction extends TableQuickActionDefinitionBase {
    constructor(context) {
      super(CREATE_TABLE_CUSTOM_COLUMN, CONTROL_TYPES, 'QUICK_ACTION_ADD_CUSTOM_TABLE_COLUMN', context, undefined, [DIALOG_ENABLEMENT_VALIDATOR]);
    }
    async execute(path) {
      const {
        table,
        iconTabBarFilterKey,
        sectionInfo
      } = this.tableMap[path];
      if (!table) {
        return [];
      }
      preprocessActionExecution(table, sectionInfo, this.iconTabBar, iconTabBarFilterKey);
      this.selectOverlay(table);
      const overlay = OverlayRegistry.getOverlay(table);
      await DialogFactory.createDialog(overlay, this.context.rta, DialogNames.ADD_FRAGMENT, undefined, {
        aggregation: 'columns',
        title: 'QUICK_ACTION_ADD_CUSTOM_TABLE_COLUMN'
      }, {
        actionName: this.type,
        telemetryEventIdentifier: this.getTelemetryIdentifier()
      });
      return [];
    }
  }
  var __exports = {
    __esModule: true
  };
  __exports.CREATE_TABLE_CUSTOM_COLUMN = CREATE_TABLE_CUSTOM_COLUMN;
  __exports.CONTROL_TYPES = CONTROL_TYPES;
  __exports.AddTableCustomColumnQuickAction = AddTableCustomColumnQuickAction;
  return __exports;
});
//# sourceMappingURL=create-table-custom-column.js.map