"use strict";

sap.ui.define(["sap/ui/dt/OverlayUtil", "../../../utils/core", "../../dialog-factory", "../dialog-enablement-validator", "../table-quick-action-base", "../control-types", "../fe-v2/create-table-custom-column"], function (OverlayUtil, _____utils_core, ____dialog_factory, ___dialog_enablement_validator, ___table_quick_action_base, ___control_types, ___fe_v2_create_table_custom_column) {
  "use strict";

  const getControlById = _____utils_core["getControlById"];
  const DialogFactory = ____dialog_factory["DialogFactory"];
  const DialogNames = ____dialog_factory["DialogNames"];
  const DIALOG_ENABLEMENT_VALIDATOR = ___dialog_enablement_validator["DIALOG_ENABLEMENT_VALIDATOR"];
  const TableQuickActionDefinitionBase = ___table_quick_action_base["TableQuickActionDefinitionBase"];
  const MDC_TABLE_TYPE = ___control_types["MDC_TABLE_TYPE"];
  const preprocessActionExecution = ___fe_v2_create_table_custom_column["preprocessActionExecution"];
  const CREATE_TABLE_ACTION = 'create-table-action';

  /**
   * Quick Action for creating table action.
   */
  class AddTableActionQuickAction extends TableQuickActionDefinitionBase {
    constructor(context) {
      super(CREATE_TABLE_ACTION, [MDC_TABLE_TYPE], 'QUICK_ACTION_ADD_CUSTOM_TABLE_ACTION', context, undefined, [DIALOG_ENABLEMENT_VALIDATOR]);
    }
    async execute(path) {
      const {
        table,
        sectionInfo,
        iconTabBarFilterKey
      } = this.tableMap[path];
      if (!table) {
        return [];
      }
      preprocessActionExecution(table, sectionInfo, this.iconTabBar, iconTabBarFilterKey);
      const tableControl = getControlById(table.getId());
      const controlOverlay = OverlayUtil.getClosestOverlayFor(tableControl);
      if (controlOverlay) {
        controlOverlay.setSelected(true);
        await DialogFactory.createDialog(controlOverlay, this.context.rta, DialogNames.ADD_FRAGMENT, undefined, {
          aggregation: 'actions',
          defaultAggregationArrayIndex: 0,
          title: 'QUICK_ACTION_ADD_CUSTOM_TABLE_ACTION'
        }, {
          actionName: this.type,
          telemetryEventIdentifier: this.getTelemetryIdentifier()
        });
      }
      return [];
    }
  }
  var __exports = {
    __esModule: true
  };
  __exports.CREATE_TABLE_ACTION = CREATE_TABLE_ACTION;
  __exports.AddTableActionQuickAction = AddTableActionQuickAction;
  return __exports;
});
//# sourceMappingURL=create-table-action.js.map