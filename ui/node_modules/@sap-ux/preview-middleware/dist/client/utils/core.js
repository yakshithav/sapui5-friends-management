"use strict";

sap.ui.define(["sap/ui/core/Component", "sap/ui/core/Element"], function (Component, Element) {
  "use strict";

  /**
   * Gets Component by id.
   *
   * @param id - unique identifier for control
   * @returns Component | undefined
   */
  function getComponent(id) {
    if (Component?.getComponentById) {
      return Component.getComponentById(id);
    } else if (Component?.get) {
      // Older version must be still supported until maintenance period.
      return Component.get(id); // NOSONAR
    } else {
      // Older version must be still supported until maintenance period.
      return sap.ui.getCore().getComponent(id); // NOSONAR
    }
  }

  /**
   * Returns control by its global ID.
   *
   * @param id Id of the control.
   * @returns Control instance if it exists.
   */
  function getControlById(id) {
    if (typeof Element.getElementById === 'function') {
      return Element.getElementById(id);
    } else {
      return sap.ui.getCore().byId(id);
    }
  }

  /**
   * Checks wether this object is an instance of a ManagedObject.
   *
   * @param element An object.
   * @returns True if element is an instance of a ManagedObject.
   */
  function isManagedObject(element) {
    if (typeof element?.isA === 'function') {
      return element.isA('sap.ui.base.ManagedObject');
    }
    return false;
  }

  /**
   * Checks whether this object is an instance of the named type.
   *
   * @param type - Type to check for.
   * @param element - Object to check
   * @returns Whether this object is an instance of the given type.
   */
  function isA(type, element) {
    return !!element?.isA(type);
  }
  function hasParent(component, parentIdToFind) {
    const parent = component.getParent();
    if (!parent) {
      return false;
    }
    if (parent.getId() === parentIdToFind) {
      return true;
    }
    return hasParent(parent, parentIdToFind);
  }
  function findNestedElements(ownerElement, candidates) {
    const ownerId = ownerElement.getId();
    return candidates.filter(item => hasParent(item, ownerId));
  }
  var __exports = {
    __esModule: true
  };
  __exports.getComponent = getComponent;
  __exports.getControlById = getControlById;
  __exports.isManagedObject = isManagedObject;
  __exports.isA = isA;
  __exports.hasParent = hasParent;
  __exports.findNestedElements = findNestedElements;
  return __exports;
});
//# sourceMappingURL=core.js.map