"use strict";

sap.ui.define(["../cpe/additional-change-info/add-xml-additional-info"], function (___cpe_additional_change_info_add_xml_additional_info) {
  "use strict";

  const getAddXMLAdditionalInfo = ___cpe_additional_change_info_add_xml_additional_info["getAddXMLAdditionalInfo"];
  const additionalChangeInfoMap = new Map();

  /**
   * This function is used to set additional change information for a given change.
   *
   * @param change - The change object for which additional information is to be set.
   */
  function setAdditionalChangeInfo(change) {
    if (!change) {
      return;
    }
    let additionalChangeInfo;
    if (change?.getChangeType?.() === 'addXML') {
      additionalChangeInfo = getAddXMLAdditionalInfo(change);
    }
    if (additionalChangeInfo) {
      additionalChangeInfoMap.set(change.getDefinition().fileName, additionalChangeInfo);
    }
  }
  function setAdditionalChangeInfoForChangeFile(fileName, additionalChangeInfo) {
    additionalChangeInfoMap.set(fileName, additionalChangeInfo);
  }

  /**
   * Retrieves additional change information for a given change.
   *
   * @param change - The change object containing details about a file modification.
   * @returns The additional change information associated with the file name of the change,
   *          or `undefined` if no additional information is available.
   */
  function getAdditionalChangeInfo(change) {
    return additionalChangeInfoMap.get(change.fileName);
  }

  /**
   * Should only be used in tests.
   */
  function clearAdditionalChangeInfo() {
    additionalChangeInfoMap.clear();
  }
  var __exports = {
    __esModule: true
  };
  __exports.setAdditionalChangeInfo = setAdditionalChangeInfo;
  __exports.setAdditionalChangeInfoForChangeFile = setAdditionalChangeInfoForChangeFile;
  __exports.getAdditionalChangeInfo = getAdditionalChangeInfo;
  __exports.clearAdditionalChangeInfo = clearAdditionalChangeInfo;
  return __exports;
});
//# sourceMappingURL=additional-change-info.js.map