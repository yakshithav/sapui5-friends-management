import type { Editor } from 'mem-fs-editor';
import type { EdmxOdataService, ProjectPaths } from './types';
/**
 * Adds services data to ui5-*.yaml files.
 * Mockserver configuration for services and annotations are written using dataSources from manifest.json.
 * At the end, XML files for service annotations are created.
 *
 * @param {string} basePath - the root path of an existing UI5 application
 * @param {ProjectPaths} paths - paths to the project files (package.json, ui5.yaml, ui5-local.yaml and ui5-mock.yaml)
 * @param {string} templateRoot - path to the file templates
 * @param {EdmxOdataService} service - the OData service instance
 * @param {Editor} fs - the memfs editor instance
 */
export declare function addServicesData(basePath: string, paths: ProjectPaths, templateRoot: string, service: EdmxOdataService, fs: Editor): Promise<void>;
/**
 * Updates services data in ui5-*.yaml files.
 * Mockserver configuration for services and annotations are updated using dataSources from manifest.json.
 *
 * @param {string} basePath - the root path of an existing UI5 application
 * @param {ProjectPaths} paths - paths to the project files (package.json, ui5.yaml, ui5-local.yaml and ui5-mock.yaml)
 * @param {EdmxOdataService} service - the OData service instance
 * @param {Editor} fs - the memfs editor instance
 * @param {boolean} updateMiddlewares - whether the YAML files for the service (mock-server and fiori-tools-proxy middlewares) should be updated
 */
export declare function updateServicesData(basePath: string, paths: ProjectPaths, service: EdmxOdataService, fs: Editor, updateMiddlewares: boolean): Promise<void>;
//# sourceMappingURL=update.d.ts.map