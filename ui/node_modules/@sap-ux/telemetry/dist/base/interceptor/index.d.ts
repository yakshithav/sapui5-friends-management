import type { EventName } from '../types/event-name';
import type { SampleRate } from '../types/sample-rate';
import type { ParamRecordConfig } from '../utils/param-processing';
export declare const notify: (target: Record<string, object>, originalFn: Function, evtName: EventName, sampleRate: SampleRate) => Function;
export declare const notifyAsync: (target: Record<string, object>, originalFn: Function, evtName: EventName, sampleRate: SampleRate) => Function;
export declare const duration: (target: Record<string, object>, originalFn: Function, evtName: EventName, sampleRate: SampleRate) => Function;
export declare const durationAsync: (target: Record<string, object>, originalFn: Function, evtName: EventName, sampleRate: SampleRate) => Function;
export declare const captureParam: (target: Record<string, object>, originalFn: Function, evtName: EventName, sampleRate: SampleRate, instructions: ParamRecordConfig | ParamRecordConfig[]) => Function;
export declare const captureParamAsync: (target: Record<string, object>, originalFn: Function, evtName: EventName, sampleRate: SampleRate, instructions: ParamRecordConfig | ParamRecordConfig[]) => Function;
//# sourceMappingURL=index.d.ts.map