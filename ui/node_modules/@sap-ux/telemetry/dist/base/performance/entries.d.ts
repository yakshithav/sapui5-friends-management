import type { Measurement as IMeasurement, Mark as IMark } from './types';
import { EntryType } from './types';
/**
 * Repreeents a mark during a performance measurement.
 */
declare class Mark implements IMark {
    readonly startTime: number;
    [index: number]: string;
    name: string;
    type: EntryType;
    /**
     * @returns start time in millieseconds
     */
    getStartTime(): number;
    /**
     *
     * @param name Name of mark
     * @param type Mark type
     * @param startTime start time in millieseconds
     */
    constructor(name: string, type: EntryType, startTime: number);
}
/**
 * Measurement of execution time length
 */
declare class Measurement extends Mark implements IMeasurement {
    readonly startTime: number;
    readonly duration: number;
    /**
     *
     * @param name Name of a mark
     * @param startTime start time in millieseconds
     * @param duration time in millieseconds
     */
    constructor(name: string, startTime: number, duration: number);
    /**
     * @returns duration in milliseconds
     */
    getDurationTime(): number;
}
export { Mark, Measurement };
//# sourceMappingURL=entries.d.ts.map