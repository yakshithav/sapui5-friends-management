"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.printOptions = exports.createRangeWithPosition = exports.createRange = exports.arePositionsEqual = exports.copyPosition = exports.areRangesEqual = exports.copyRange = exports.rangeAt = exports.positionContained = exports.rangeContained = exports.positionContainedStrict = exports.isBefore = exports.indent = exports.getIndentLevel = exports.positionAt = exports.getLineOffsets = exports.MarkedString = exports.MarkupContent = exports.CompletionItem = exports.CompletionList = exports.Hover = exports.CodeActionKind = exports.CodeAction = exports.MarkupKind = exports.integer = exports.InsertTextFormat = exports.CompletionItemKind = exports.WorkspaceEdit = exports.TextEdit = exports.DiagnosticSeverity = exports.Diagnostic = exports.Position = exports.Range = exports.Location = void 0;
var vscode_languageserver_types_1 = require("vscode-languageserver-types");
Object.defineProperty(exports, "Location", { enumerable: true, get: function () { return vscode_languageserver_types_1.Location; } });
Object.defineProperty(exports, "Range", { enumerable: true, get: function () { return vscode_languageserver_types_1.Range; } });
Object.defineProperty(exports, "Position", { enumerable: true, get: function () { return vscode_languageserver_types_1.Position; } });
Object.defineProperty(exports, "Diagnostic", { enumerable: true, get: function () { return vscode_languageserver_types_1.Diagnostic; } });
Object.defineProperty(exports, "DiagnosticSeverity", { enumerable: true, get: function () { return vscode_languageserver_types_1.DiagnosticSeverity; } });
Object.defineProperty(exports, "TextEdit", { enumerable: true, get: function () { return vscode_languageserver_types_1.TextEdit; } });
Object.defineProperty(exports, "WorkspaceEdit", { enumerable: true, get: function () { return vscode_languageserver_types_1.WorkspaceEdit; } });
Object.defineProperty(exports, "CompletionItemKind", { enumerable: true, get: function () { return vscode_languageserver_types_1.CompletionItemKind; } });
Object.defineProperty(exports, "InsertTextFormat", { enumerable: true, get: function () { return vscode_languageserver_types_1.InsertTextFormat; } });
Object.defineProperty(exports, "integer", { enumerable: true, get: function () { return vscode_languageserver_types_1.integer; } });
Object.defineProperty(exports, "MarkupKind", { enumerable: true, get: function () { return vscode_languageserver_types_1.MarkupKind; } });
Object.defineProperty(exports, "CodeAction", { enumerable: true, get: function () { return vscode_languageserver_types_1.CodeAction; } });
Object.defineProperty(exports, "CodeActionKind", { enumerable: true, get: function () { return vscode_languageserver_types_1.CodeActionKind; } });
Object.defineProperty(exports, "Hover", { enumerable: true, get: function () { return vscode_languageserver_types_1.Hover; } });
Object.defineProperty(exports, "CompletionList", { enumerable: true, get: function () { return vscode_languageserver_types_1.CompletionList; } });
Object.defineProperty(exports, "CompletionItem", { enumerable: true, get: function () { return vscode_languageserver_types_1.CompletionItem; } });
Object.defineProperty(exports, "MarkupContent", { enumerable: true, get: function () { return vscode_languageserver_types_1.MarkupContent; } });
Object.defineProperty(exports, "MarkedString", { enumerable: true, get: function () { return vscode_languageserver_types_1.MarkedString; } });
var line_offsets_1 = require("./line-offsets");
Object.defineProperty(exports, "getLineOffsets", { enumerable: true, get: function () { return line_offsets_1.getLineOffsets; } });
var position_1 = require("./position");
Object.defineProperty(exports, "positionAt", { enumerable: true, get: function () { return position_1.positionAt; } });
Object.defineProperty(exports, "getIndentLevel", { enumerable: true, get: function () { return position_1.getIndentLevel; } });
Object.defineProperty(exports, "indent", { enumerable: true, get: function () { return position_1.indent; } });
Object.defineProperty(exports, "isBefore", { enumerable: true, get: function () { return position_1.isBefore; } });
Object.defineProperty(exports, "positionContainedStrict", { enumerable: true, get: function () { return position_1.positionContainedStrict; } });
Object.defineProperty(exports, "rangeContained", { enumerable: true, get: function () { return position_1.rangeContained; } });
Object.defineProperty(exports, "positionContained", { enumerable: true, get: function () { return position_1.positionContained; } });
var range_1 = require("./range");
Object.defineProperty(exports, "rangeAt", { enumerable: true, get: function () { return range_1.rangeAt; } });
Object.defineProperty(exports, "copyRange", { enumerable: true, get: function () { return range_1.copyRange; } });
Object.defineProperty(exports, "areRangesEqual", { enumerable: true, get: function () { return range_1.areRangesEqual; } });
Object.defineProperty(exports, "copyPosition", { enumerable: true, get: function () { return range_1.copyPosition; } });
Object.defineProperty(exports, "arePositionsEqual", { enumerable: true, get: function () { return range_1.arePositionsEqual; } });
Object.defineProperty(exports, "createRange", { enumerable: true, get: function () { return range_1.createRange; } });
Object.defineProperty(exports, "createRangeWithPosition", { enumerable: true, get: function () { return range_1.createRangeWithPosition; } });
var text_formatting_1 = require("./text-formatting");
Object.defineProperty(exports, "printOptions", { enumerable: true, get: function () { return text_formatting_1.printOptions; } });
//# sourceMappingURL=index.js.map