import type { UI5Config } from '@sap-ux/ui5-config';
import type { AdpWriterConfig, Content, CloudApp, InternalInboundNavigation } from '../types';
/**
 * Generate the configuration for the middlewares required for the ui5.yaml.
 *
 * @param ui5Config configuration representing the ui5.yaml
 * @param config full project configuration
 */
export declare function enhanceUI5Yaml(ui5Config: UI5Config, config: AdpWriterConfig): void;
/**
 * Generates the configuration for the custom tasks required for the ui5.yaml.
 *
 * Adds a custom task for building TypeScript projects.
 *
 * @param {UI5Config} ui5Config - The UI5 configuration object representing the ui5.yaml.
 * @param {AdpWriterConfig} config - The configuration object containing options for the adaptation project.
 */
export declare function enhanceUI5YamlWithCustomTask(ui5Config: UI5Config, config: AdpWriterConfig & {
    app: CloudApp;
}): void;
/**
 * Generate custom configuration required for the ui5.yaml.
 *
 * @param ui5Config configuration representing the ui5.yaml
 * @param config full project configuration
 */
export declare function enhanceUI5YamlWithCustomConfig(ui5Config: UI5Config, config: AdpWriterConfig): void;
/**
 * Enhances a UI5 YAML configuration with the transpile middleware for TypeScript support.
 *
 * @param {UI5Config} ui5Config - The UI5 configuration object representing the ui5.yaml.
 * @param {AdpWriterConfig} config - The configuration object containing options for the adaptation project.
 * @param {boolean} [config.options.enableTypeScript] - Flag indicating if TypeScript support is enabled.
 */
export declare function enhanceUI5YamlWithTranspileMiddleware(ui5Config: UI5Config, config: AdpWriterConfig): void;
/**
 * Writer configuration with deploy configuration.
 */
type AdpWriterConfigWithDeploy = AdpWriterConfig & {
    deploy: NonNullable<AdpWriterConfig['deploy']>;
};
/**
 * Checks if a writer config has a deploy configuration.
 *
 * @param config a writer configuration
 * @returns typecasted config if it contains a deploy config
 */
export declare function hasDeployConfig(config: AdpWriterConfig): config is AdpWriterConfigWithDeploy;
/**
 * Generate the configuration for the tasks required for the ui5-deploy.yaml.
 *
 * @param ui5Config configuration representing the ui5.yaml
 * @param config full project configuration
 */
export declare function enhanceUI5DeployYaml(ui5Config: UI5Config, config: AdpWriterConfigWithDeploy): void;
/**
 * Generate Inbound change content required for manifest.appdescriptor.
 *
 * @param flpConfiguration FLP cloud project configuration
 * @param appId Application variant id
 * @param manifestChangeContent Application variant change content
 */
export declare function enhanceManifestChangeContentWithFlpConfig(flpConfiguration: InternalInboundNavigation, appId: string, manifestChangeContent?: Content[]): void;
export {};
//# sourceMappingURL=options.d.ts.map