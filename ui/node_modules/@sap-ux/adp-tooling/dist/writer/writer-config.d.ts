import type { ToolsLogger } from '@sap-ux/logger';
import type { Manifest, Package } from '@sap-ux/project-access';
import type { AbapServiceProvider } from '@sap-ux/axios-extension';
import { FlexLayer } from '../types';
import type { AdpWriterConfig, AttributesAnswers, ConfigAnswers, UI5Version } from '../types';
export interface ConfigOptions {
    /**
     * The ABAP service provider instance used to retrieve system-specific information.
     */
    provider: AbapServiceProvider;
    /**
     * User-provided configuration details, including system and application data.
     */
    configAnswers: ConfigAnswers;
    /**
     * User-provided project attribute answers.
     */
    attributeAnswers: AttributesAnswers;
    /**
     * The FlexLayer indicating the deployment layer (e.g., CUSTOMER_BASE or VENDOR).
     */
    layer: FlexLayer;
    /**
     * The package.json information used to generate custom configuration.
     */
    packageJson: Package;
    /**
     * Public UI5 Versions.
     */
    publicVersions: UI5Version;
    /**
     * System UI5 Version.
     */
    systemVersion: string | undefined;
    /**
     * The application manifest.
     */
    manifest: Manifest | undefined;
    /**
     * Logger instance for debugging and error reporting.
     */
    logger: ToolsLogger;
}
/**
 * Generates the configuration object for the Adaptation Project.
 *
 * @param {ConfigOptions} options - The configuration options.
 * @param {AbapServiceProvider} options.provider - The ABAP service provider instance.
 * @param {ConfigAnswers} options.configAnswers - User-provided configuration details (system, application, etc.).
 * @param {FlexLayer} options.layer - The FlexLayer indicating the deployment layer.
 * @param {object} options.defaults - Default project parameters.
 * @param {string} options.defaults.namespace - The default namespace to be used.
 * @param {Package} options.packageJson - The package.json information for generating custom configuration.
 * @param {ToolsLogger} options.logger - The logger for debugging and error logging.
 * @returns {Promise<AdpWriterConfig>} A promise that resolves to the generated ADP writer configuration.
 */
export declare function getConfig(options: ConfigOptions): Promise<AdpWriterConfig>;
/**
 * Generates the configuration details required for a SAPUI5 application based on system and selected UI5 versions.
 *
 * @param {string} ui5Version - The selected UI5 version.
 * @param {UI5Version} publicVersions - The publicly available UI5 versions.
 * @param {string | undefined} systemVersion - The SAPUI5 version detected on the target system.
 * @returns {AdpWriterConfig['ui5']} An object containing the required UI5 configuration for the writer config.
 */
export declare function getUi5Config(ui5Version: string, publicVersions: UI5Version, systemVersion: string | undefined): AdpWriterConfig['ui5'];
//# sourceMappingURL=writer-config.d.ts.map