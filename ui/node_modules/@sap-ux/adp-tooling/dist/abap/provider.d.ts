import type { ToolsLogger } from '@sap-ux/logger';
import type { AbapServiceProvider } from '@sap-ux/axios-extension';
interface ProviderOptions {
    system: string;
    client?: string;
    username?: string;
    password?: string;
}
/**
 * Retrieves a fully configured ABAP service provider for the specified system.
 *
 * This function uses the provided system identifier (and optional client and credentials)
 * to build an ABAP target configuration, which is then passed to createAbapServiceProvider.
 *
 * @param {ProviderOptions} options - Options for configuring the provider.
 * @param {ToolsLogger} logger - The logger for logging errors and debug messages.
 * @returns {Promise<AbapServiceProvider>} A promise that resolves to the configured ABAP service provider.
 * @throws {Error} If provider instantiation fails.
 */
export declare function getConfiguredProvider({ system, client, password, username }: ProviderOptions, logger: ToolsLogger): Promise<AbapServiceProvider>;
export {};
//# sourceMappingURL=provider.d.ts.map