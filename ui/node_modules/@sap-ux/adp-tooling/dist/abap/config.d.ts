import type { ToolsLogger } from '@sap-ux/logger';
import type { AbapTarget } from '@sap-ux/ui5-config';
import type { AxiosRequestConfig, ProviderConfiguration } from '@sap-ux/axios-extension';
export type RequestOptions = AxiosRequestConfig & Partial<ProviderConfiguration>;
/**
 * Determines the ABAP target configuration based on the running environment and system details.
 *
 * For an App Studio environment, the config is constructed with a destination property.
 * For non-AppStudio environments, the function retrieves system details from the SystemLookup service,
 * maps these details to an AbapTarget, and attaches authentication credentials to the request options if available.
 *
 * @param {string} system - The system identifier (URL or system name).
 * @param {ToolsLogger} logger - The logger for logging errors.
 * @param {RequestOptions} [requestOptions] - Optional request options which will be updated with auth information if available.
 * @param {string} [client] - Optional client number for systems with multiple clients.
 * @returns {Promise<AbapTarget>} A promise that resolves to the configured ABAP configuration.
 */
export declare function getProviderConfig(system: string, logger: ToolsLogger, requestOptions?: RequestOptions, client?: string): Promise<AbapTarget>;
//# sourceMappingURL=config.d.ts.map