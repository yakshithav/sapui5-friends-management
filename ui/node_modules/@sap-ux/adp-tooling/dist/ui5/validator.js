"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateUI5VersionExists = validateUI5VersionExists;
const project_input_validator_1 = require("@sap-ux/project-input-validator");
const i18n_1 = require("../i18n");
const format_1 = require("./format");
const network_1 = require("./network");
/**
 * Validates a specified UI5 version by checking its availability on the SAP CDN.
 *
 * @param {string} [version] - The version to validate.
 * @returns {Promise<string | boolean>} True if the version is valid, a string message if not, or if an error occurs.
 */
async function validateUI5VersionExists(version) {
    const validationResult = (0, project_input_validator_1.validateEmptyString)(version);
    if (typeof validationResult === 'string') {
        return validationResult;
    }
    const selectedVersionURL = (0, format_1.getOfficialBaseUI5VersionUrl)(version);
    const resource = version.includes('snapshot') ? 'neo-app.json' : (0, format_1.getFormattedVersion)(version);
    try {
        await fetch(`${selectedVersionURL}/${resource}`);
        return true;
    }
    catch (e) {
        if (version.includes('snapshot')) {
            const message = (0, i18n_1.t)('validators.ui5VersionNotReachableError');
            return `${message.replace('<URL>', selectedVersionURL)}`;
        }
        if (e.response?.status === 400 || e.response?.status === 404) {
            return (0, i18n_1.t)('validators.ui5VersionOutdatedError');
        }
        if ((0, network_1.isOfflineError)(e)) {
            return true;
        }
        return (0, i18n_1.t)('validators.ui5VersionDoesNotExistGeneric', { error: e.message });
    }
}
//# sourceMappingURL=validator.js.map