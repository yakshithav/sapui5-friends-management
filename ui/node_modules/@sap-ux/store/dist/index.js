"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FioriToolsSettings = exports.getFioriToolsDirectory = exports.getBackendSystemType = exports.Entity = exports.getFilesystemWatcherFor = void 0;
exports.getService = getService;
const constants_1 = require("./constants");
Object.defineProperty(exports, "Entity", { enumerable: true, get: function () { return constants_1.Entity; } });
const i18n_1 = require("./i18n");
const backend_system_1 = require("./services/backend-system");
const telemetry_setting_1 = require("./services/telemetry-setting");
const api_hub_1 = require("./services/api-hub");
const defaults_1 = require("./defaults");
const services = {
    system: backend_system_1.getInstance,
    telemetrySetting: telemetry_setting_1.getInstance,
    'api-hub': api_hub_1.getInstance
};
async function getService({ logger = (0, defaults_1.getDefaultLogger)(), entityName, options = {} }) {
    await (0, i18n_1.initI18n)();
    const factory = services[entityName];
    if (factory) {
        return factory(logger, options);
    }
    else {
        throw new Error((0, i18n_1.text)('error.unsupportedEntity', { entityName }));
    }
}
__exportStar(require("./services"), exports);
__exportStar(require("./entities/backend-system"), exports);
__exportStar(require("./entities/telemetry-setting"), exports);
__exportStar(require("./entities/api-hub"), exports);
// @todo: change notification needs to be more generic and not tied to filesystems
// Support any filesystem watchers
var data_access_1 = require("./data-access");
Object.defineProperty(exports, "getFilesystemWatcherFor", { enumerable: true, get: function () { return data_access_1.getFilesystemWatcherFor; } });
var utils_1 = require("./utils");
Object.defineProperty(exports, "getBackendSystemType", { enumerable: true, get: function () { return utils_1.getBackendSystemType; } });
var utils_2 = require("./utils");
Object.defineProperty(exports, "getFioriToolsDirectory", { enumerable: true, get: function () { return utils_2.getFioriToolsDirectory; } });
Object.defineProperty(exports, "FioriToolsSettings", { enumerable: true, get: function () { return utils_2.FioriToolsSettings; } });
//# sourceMappingURL=index.js.map