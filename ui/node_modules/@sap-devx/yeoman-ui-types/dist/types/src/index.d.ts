export declare abstract class AppWizard {
    abstract showProgress(message?: string): void;
    abstract showWarning(message: string, type: MessageType): void;
    abstract showError(message: string, type: MessageType): void;
    abstract showInformation(message: string, type: MessageType): void;
    abstract setHeaderTitle(title: string, additionalInfo?: string): void;
    static create(genOptions?: any): AppWizard;
}
export declare enum Severity {
    error = 0,
    warning = 1,
    information = 2
}
export declare enum MessageType {
    prompt = 0,
    notification = 1
}
export declare class Prompts {
    private readonly items;
    private callback;
    constructor(items?: IPrompt[]);
    splice(start: number, deleteCount: number, items: IPrompt[]): void;
    setCallback(callback: any): void;
    size(): number;
}
export interface IPrompt {
    name: string;
    description: string;
}
/**
 * Enhanced validation messages to support embedded help urls and commands
 */
export interface IValidationLink {
    /**
     * Validation message to be shown to the end user
     */
    message: string;
    link: {
        /**
         * The text associated with the help link
         */
        text: string;
        /**
         * A string base64 encoded image
         */
        icon?: string;
        /**
         * Command to be exectuted and parameters passed to the command
         */
        command?: {
            id: string;
            params: Object | string;
        };
        /**
         * A http url string
         */
        url?: string;
    };
    /**
     * Provide a stringified version of the link that will be used on the CLI
     */
    toString(): string;
}
/**
 * Messages with severity
 */
export interface IMessageSeverity {
    message: string;
    severity: Severity;
}
